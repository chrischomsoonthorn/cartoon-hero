/*Colour scheme:
	Black: #0C120C;
	Red: #C20114;
	Grey: #6D7275;
	Bluegrey: #C7D6D5;
	Magnolia (grey): #ECEBF3;
*/

body{
	margin: 0;
}

header{
	background-color: #C7D6D5;
	text-align: center;
	padding: 50px 50px 50px;
	position: relative;
}

/*This creates a border type effect at the bottom of the header*/
header:after{
	content:"";
	position: absolute;
	background-color: #C20114; 
	left: 0;
	right: 0;
	bottom: 0px;
	height: 20px;
}

h1{
	color: #0C120C;
	font-size: 70px;
	font-family: 'Roboto Slab', serif;
}

main{
	margin: 10px;
}

h2{
	color: #0C120C;
	font-size: 35px;
	font-family: 'Roboto Slab', serif;
}

.cool{
	
	/*By default By default p tags are block elements, which means they take 100% of the parent width.

	You can change their display property with:

	#container p {
	   display:inline-block;
	}
	But it puts the elements side by side.

	To keep each element on its own line you can use:

	#container p {
	   clear:both;
	   float:left;
	}*/
	

	display: inline-block;
	box-sizing: border-box;
	background-color: green;
	color: white;
	transition: background-color 1s;
}

/*I was a little confused by this at first but cool.red gives me the ability to keep the attributes of 'cool' whilst also applying a new attribute which is 'red'. When referencing cool.red I should just not put the full stop.*/

.cool.red{
	background-color: red;
}